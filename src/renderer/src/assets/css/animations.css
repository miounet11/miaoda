/* MiaoDa Chat 高级微交互动画库 */

/* ========== 核心过渡系统 ========== */

/* 全局平滑过渡 */
* {
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

/* 缓动函数变量 */
:root {
  --ease-in-quad: cubic-bezier(0.25, 0.46, 0.45, 0.94);
  --ease-out-quad: cubic-bezier(0.25, 0.46, 0.45, 0.94);
  --ease-in-out-quad: cubic-bezier(0.455, 0.03, 0.515, 0.955);
  --ease-spring: cubic-bezier(0.175, 0.885, 0.32, 1.275);
  --ease-bounce: cubic-bezier(0.68, -0.55, 0.265, 1.55);
  --ease-gentle: cubic-bezier(0.4, 0, 0.2, 1);
}

/* ========== 消息进入动画 - 仅透明度变化 ========== */
@keyframes messageSlideIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

/* 脉动效果 */
@keyframes pulse-subtle {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0.7;
  }
}

/* 波纹效果 */
@keyframes ripple {
  0% {
    transform: scale(0);
    opacity: 1;
  }
  100% {
    transform: scale(4);
    opacity: 0;
  }
}

/* 渐变背景动画 */
@keyframes gradient-shift {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

/* 闪烁效果 */
@keyframes shimmer {
  0% {
    background-position: -200% 0;
  }
  100% {
    background-position: 200% 0;
  }
}

/* 聚焦呼吸效果 */
@keyframes focus-breathe {
  0%, 100% {
    box-shadow: 0 0 0 2px rgba(var(--primary), 0.2);
  }
  50% {
    box-shadow: 0 0 0 4px rgba(var(--primary), 0.1);
  }
}

/* ========== 移除会影响文字大小的动画 ========== */
/* 悬浮效果 - 移除scale变换 */
.hover-lift {
  transition: box-shadow 0.2s ease;
}

.hover-lift:hover {
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
}

/* 按钮点击效果 - 仅透明度变化 */
.click-scale {
  transition: opacity 0.1s ease;
}

.click-scale:active {
  opacity: 0.8;
}

/* 骨架屏效果 */
.skeleton {
  background: linear-gradient(
    90deg,
    rgba(var(--muted), 0.3) 25%,
    rgba(var(--muted), 0.5) 50%,
    rgba(var(--muted), 0.3) 75%
  );
  background-size: 200% 100%;
  animation: shimmer 1.5s infinite;
}

/* 加载点动画 */
.loading-dots span {
  animation: loading-dot 1.4s infinite;
}

.loading-dots span:nth-child(2) {
  animation-delay: 0.2s;
}

.loading-dots span:nth-child(3) {
  animation-delay: 0.4s;
}

@keyframes loading-dot {
  0%, 80%, 100% {
    opacity: 0.3;
    transform: scale(0.8);
  }
  40% {
    opacity: 1;
    transform: scale(1);
  }
}

/* 成功动画 */
@keyframes success-check {
  0% {
    stroke-dashoffset: 100;
    opacity: 0;
  }
  50% {
    opacity: 1;
  }
  100% {
    stroke-dashoffset: 0;
    opacity: 1;
  }
}

/* 错误摇晃动画 */
@keyframes error-shake {
  0%, 100% {
    transform: translateX(0);
  }
  10%, 30%, 50%, 70%, 90% {
    transform: translateX(-4px);
  }
  20%, 40%, 60%, 80% {
    transform: translateX(4px);
  }
}

/* 弹性进入 - 仅透明度变化 */
@keyframes bounce-in {
  0% {
    opacity: 0;
  }
  50% {
    opacity: 0.8;
  }
  100% {
    opacity: 1;
  }
}

/* 淡入淡出 */
.fade-enter-active,
.fade-leave-active {
  transition: opacity 0.3s ease;
}

.fade-enter-from,
.fade-leave-to {
  opacity: 0;
}

/* 滑动过渡 */
.slide-enter-active,
.slide-leave-active {
  transition: all 0.3s ease;
}

.slide-enter-from {
  transform: translateX(-20px);
  opacity: 0;
}

.slide-leave-to {
  transform: translateX(20px);
  opacity: 0;
}

/* 展开收起 */
.expand-enter-active,
.expand-leave-active {
  transition: all 0.3s ease;
  overflow: hidden;
}

.expand-enter-from,
.expand-leave-to {
  max-height: 0;
  opacity: 0;
}

/* 工具提示动画 */
.tooltip {
  animation: tooltip-appear 0.2s ease;
}

@keyframes tooltip-appear {
  from {
    opacity: 0;
    transform: translateY(4px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* 进度条动画 */
@keyframes progress-fill {
  from {
    width: 0;
  }
  to {
    width: var(--progress, 0%);
  }
}

/* 旋转加载 */
@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

.animate-spin {
  animation: spin 1s linear infinite;
}

/* 平滑滚动 */
.smooth-scroll {
  scroll-behavior: smooth;
}

/* ========== 微交互效果 ========== */

/* 波纹点击效果 */
.ripple-effect {
  position: relative;
  overflow: hidden;
}

.ripple-effect::after {
  content: '';
  position: absolute;
  inset: 0;
  background: radial-gradient(circle, rgba(255, 255, 255, 0.4) 0%, transparent 70%);
  transform: scale(0);
  opacity: 0;
  transition: all 0.4s var(--ease-gentle);
  pointer-events: none;
}

.ripple-effect:active::after {
  transform: scale(1);
  opacity: 1;
  transition-duration: 0.1s;
}

/* 磁性悬停效果 - 移除scale变换 */
.magnetic-hover {
  transition: box-shadow 0.3s var(--ease-spring);
}

.magnetic-hover:hover {
  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
}

/* 弹性点击效果 - 仅透明度变化 */
.elastic-click {
  transition: opacity 0.2s var(--ease-bounce);
}

.elastic-click:active {
  opacity: 0.7;
  transition-duration: 0.1s;
}

/* 浮动呼吸效果 - 仅透明度微调 */
.float-breathe {
  animation: floatBreathe 4s ease-in-out infinite;
}

@keyframes floatBreathe {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0.9;
  }
}

/* 聚焦光环效果 */
.focus-glow {
  transition: all 0.3s var(--ease-gentle);
}

.focus-glow:focus-visible {
  outline: none;
  box-shadow: 0 0 0 2px rgba(var(--primary-rgb), 0.3), 
              0 0 20px rgba(var(--primary-rgb), 0.1);
  animation: focusGlow 1s ease-in-out;
}

@keyframes focusGlow {
  0%, 100% {
    box-shadow: 0 0 0 2px rgba(var(--primary-rgb), 0.3), 
                0 0 20px rgba(var(--primary-rgb), 0.1);
  }
  50% {
    box-shadow: 0 0 0 4px rgba(var(--primary-rgb), 0.2), 
                0 0 30px rgba(var(--primary-rgb), 0.15);
  }
}

/* ========== 状态指示动画 ========== */

/* 成功检查动画 - 仅透明度变化 */
.success-check {
  animation: successPop 0.6s var(--ease-bounce);
}

@keyframes successPop {
  0% { opacity: 0; }
  50% { opacity: 0.8; }
  100% { opacity: 1; }
}

/* 错误摇晃增强版 - 移除旋转 */
.error-shake-enhanced {
  animation: errorShakeEnhanced 0.6s var(--ease-gentle);
}

@keyframes errorShakeEnhanced {
  0%, 100% { transform: translateX(0); }
  10%, 30%, 50%, 70%, 90% { transform: translateX(-4px); }
  20%, 40%, 60%, 80% { transform: translateX(4px); }
}

/* 警告脉冲 */
.warning-pulse {
  animation: warningPulse 2s ease-in-out infinite;
}

@keyframes warningPulse {
  0%, 100% {
    box-shadow: 0 0 0 0 rgba(251, 191, 36, 0.4);
    opacity: 1;
  }
  50% {
    box-shadow: 0 0 0 8px rgba(251, 191, 36, 0);
    opacity: 0.8;
  }
}

/* ========== 高级过渡效果 ========== */

/* 模糊滑入 */
.blur-slide-enter-active {
  transition: all 0.4s var(--ease-spring);
}

.blur-slide-enter-from {
  opacity: 0;
  transform: translateY(20px);
  filter: blur(10px);
}

/* 缩放旋转进入 */
.scale-rotate-enter-active {
  transition: all 0.5s var(--ease-bounce);
}

.scale-rotate-enter-from {
  opacity: 0;
  transform: scale(0.3) rotate(-180deg);
}

/* 弹性滑动 */
.elastic-slide-enter-active {
  transition: all 0.6s var(--ease-spring);
}

.elastic-slide-enter-from {
  opacity: 0;
  transform: translateX(-100px) scale(0.8);
}

/* ========== 加载和等待状态 ========== */

/* 脉冲加载点 - 移除大小变化 */
.pulse-dots {
  display: flex;
  gap: 4px;
}

.pulse-dots span {
  width: 8px;
  height: 8px;
  border-radius: 50%;
  background: var(--primary);
  animation: pulseDots 1.5s ease-in-out infinite;
}

.pulse-dots span:nth-child(1) { animation-delay: 0s; }
.pulse-dots span:nth-child(2) { animation-delay: 0.2s; }
.pulse-dots span:nth-child(3) { animation-delay: 0.4s; }

@keyframes pulseDots {
  0%, 60%, 100% {
    opacity: 0.4;
  }
  30% {
    opacity: 1;
  }
}

/* 进度波浪 */
.progress-wave {
  background: linear-gradient(90deg, 
    transparent 0%, 
    rgba(var(--primary-rgb), 0.4) 50%, 
    transparent 100%);
  background-size: 200% 100%;
  animation: progressWave 2s ease-in-out infinite;
}

@keyframes progressWave {
  0% { background-position: -200% 0; }
  100% { background-position: 200% 0; }
}

/* ========== 文字和内容动画 ========== */

/* 打字机效果 */
.typewriter {
  overflow: hidden;
  border-right: 2px solid var(--primary);
  white-space: nowrap;
  animation: typewriter 3s steps(30) 1s both, 
             blinkCursor 1s step-end infinite;
}

@keyframes typewriter {
  from { width: 0; }
  to { width: 100%; }
}

@keyframes blinkCursor {
  50% { border-color: transparent; }
}

/* 字符淡入效果 */
.char-fade-in {
  animation: charFadeIn 0.8s var(--ease-gentle) both;
}

@keyframes charFadeIn {
  from {
    opacity: 0;
    transform: translateY(20px) rotateX(90deg);
  }
  to {
    opacity: 1;
    transform: translateY(0) rotateX(0);
  }
}

/* ========== 主题和色彩动画 ========== */

/* 主题切换动画 */
.theme-transition {
  transition: all 0.3s var(--ease-gentle);
}

/* 颜色渐变动画 */
.gradient-shift {
  background: linear-gradient(-45deg, 
    var(--primary), 
    var(--secondary), 
    var(--accent), 
    var(--primary));
  background-size: 400% 400%;
  animation: gradientShift 4s ease infinite;
}

@keyframes gradientShift {
  0% { background-position: 0% 50%; }
  50% { background-position: 100% 50%; }
  100% { background-position: 0% 50%; }
}

/* ========== 文本稳定性保证 ========== */

/* 强制文本大小稳定 - 防止任何scale变换影响文字 */
.message-content,
.chat-message,
.markdown-content,
.message-text {
  /* 确保文本不受transform影响 */
  transform: none !important;
  /* 防止字体大小变化 */
  font-size: inherit !important;
  /* 防止缩放 */
  scale: 1 !important;
}

/* 禁用所有可能影响文字大小的动画 */
.message-content *,
.chat-message *,
.markdown-content *,
.message-text * {
  transform: none !important;
  scale: 1 !important;
}

/* 确保动画只影响容器，不影响文本内容 */
.animate-message-enter {
  animation: messageEnterStable 0.3s ease-out;
}

@keyframes messageEnterStable {
  from {
    opacity: 0;
    transform: translateY(10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* 确保消息容器的动画不传播到文本 */
.message-container {
  /* 创建新的层叠上下文，隔离动画效果 */
  isolation: isolate;
}

/* ========== 可访问性和性能优化 ========== */

/* GPU 加速优化 */
.gpu-accelerated {
  transform: translateZ(0);
  backface-visibility: hidden;
  will-change: transform;
}

/* 减少动画（可访问性） */
@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
  
  .magnetic-hover:hover {
    transform: none;
  }
  
  .float-breathe {
    animation: none;
  }
}

/* 高对比度模式 */
@media (prefers-contrast: high) {
  .focus-glow:focus-visible {
    outline: 3px solid var(--primary);
    box-shadow: none;
  }
  
  .magnetic-hover {
    border: 2px solid transparent;
  }
  
  .magnetic-hover:hover {
    border-color: var(--primary);
  }
}